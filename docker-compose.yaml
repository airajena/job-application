services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app-network
    restart: unless-stopped

  config-server-ms:
    image: 0xairajena/config-server-ms:latest
    container_name: config-server-ms
    ports:
      - "8080:8080"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  servicereg:
    image: 0xairajena/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - zipkin
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - app-network

  companyms:
    image: 0xairajena/companyms:latest
    container_name: company
    ports:
      - "8081:8081"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  jobms:
    image: 0xairajena/jobms:latest
    container_name: job
    ports:
      - "8082:8082"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  reviewms:
    image: 0xairajena/reviewms:latest
    container_name: review
    ports:
      - "8083:8083"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  gateway-ms:
    image: 0xairajena/gateway-ms:latest
    container_name: gateway-ms
    ports:
      - "8084:8084"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    ports:
      - "3000:3000"
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
  monitoring-network:
    driver: bridge
  microservice-network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  redis-data:
